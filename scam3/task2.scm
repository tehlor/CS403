(define (main)
    (setPort (open (getElement ScamArgs 1) 'read))
    (setNilDisplay 'nil)
    (readArgs)
)

(define (readArgs)
    (define env this)
    (define (iter expr)
        (if (not (eof?))
            (begin (eval expr env) 
                (iter (readExpr))
            )
        )
    )
    (iter (readExpr))
)

(define (replace f L)
    (define body (get 'code f))
    (inspect body)
    (swap (list) body (car L) (car (cdr L)))
)

(define (swap new old key token)
    (println (car old))
    (cond 
        ((null? (cdr old))
            (println)
        )
        (else
            (swap new (cdr old) key token)
        )
    )
)